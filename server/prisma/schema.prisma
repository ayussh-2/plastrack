generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String  @id @default(uuid())
  firebaseId     String  @unique
  email          String  @unique
  name           String
  phone          String?
  profilePicture String? @default("default-avatar.png")
  city           String
  state          String
  points         Int     @default(0)

  // System Fields
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  accountStatus UserStatus @default(ACTIVE)

  TrashReport TrashReport[]
}

enum UserStatus {
  ACTIVE
  SUSPENDED
  DEACTIVATED
}

model TrashReport {
  id            Int             @id @default(autoincrement())
  latitude      Decimal         @db.Decimal(10, 8)
  longitude     Decimal         @db.Decimal(11, 8)
  trashType     String?
  severity      Int
  image         String
  timestamp     DateTime        @default(now())
  user          User?           @relation(fields: [firebaseId], references: [firebaseId])
  firebaseId    String?
  aiResponse    String?
  TrashFeedback TrashFeedback[]
  complaints Complaint[] 
}

model TrashFeedback {
  id        Int         @id @default(autoincrement())
  reportId  Int
  report    TrashReport @relation(fields: [reportId], references: [id])
  feedback  String
  timestamp DateTime    @default(now())
}

model Complaint {
  id        Int         @id @default(autoincrement())
  reportId  Int
  complaint String
  status    String      @default("pending")
  timestamp DateTime    @default(now())
  report    TrashReport @relation(fields: [reportId], references: [id])

  @@map("Complaint")
}